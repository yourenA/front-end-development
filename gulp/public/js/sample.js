'use strict';

/**
 * Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.
 * For licensing, see LICENSE.md or http://ckeditor.com/license
 */

/* exported initSample */

if (CKEDITOR.env.ie && CKEDITOR.env.version < 9) CKEDITOR.tools.enableHtml5Elements(document);

// The trick to keep the editor in the sample quite small
// unless user specified own height.
CKEDITOR.config.height = 800;
CKEDITOR.config.width = 'auto';

var initSample = function () {
	var wysiwygareaAvailable = isWysiwygareaAvailable(),
	    isBBCodeBuiltIn = !!CKEDITOR.plugins.get('bbcode');

	return function () {
		var editorElement = CKEDITOR.document.getById('editor');

		// :(((
		if (isBBCodeBuiltIn) {
			editorElement.setHtml('Hello world!\n\n' + 'I\'m an instance of [url=http://ckeditor.com]CKEditor[/url].');
		}

		// Depending on the wysiwygare plugin availability initialize classic or inline editor.
		if (wysiwygareaAvailable) {
			CKEDITOR.replace('editor');
		} else {
			editorElement.setAttribute('contenteditable', 'true');
			CKEDITOR.inline('editor');

			// TODO we can consider displaying some info box that
			// without wysiwygarea the classic editor may not work.
		}
	};

	function isWysiwygareaAvailable() {
		// If in development mode, then the wysiwygarea must be available.
		// Split REV into two strings so builder does not replace it :D.
		if (CKEDITOR.revision == '%RE' + 'V%') {
			return true;
		}

		return !!CKEDITOR.plugins.get('wysiwygarea');
	}
}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbXBsZS5qcyJdLCJuYW1lcyI6WyJDS0VESVRPUiIsImVudiIsImllIiwidmVyc2lvbiIsInRvb2xzIiwiZW5hYmxlSHRtbDVFbGVtZW50cyIsImRvY3VtZW50IiwiY29uZmlnIiwiaGVpZ2h0Iiwid2lkdGgiLCJpbml0U2FtcGxlIiwid3lzaXd5Z2FyZWFBdmFpbGFibGUiLCJpc1d5c2l3eWdhcmVhQXZhaWxhYmxlIiwiaXNCQkNvZGVCdWlsdEluIiwicGx1Z2lucyIsImdldCIsImVkaXRvckVsZW1lbnQiLCJnZXRCeUlkIiwic2V0SHRtbCIsInJlcGxhY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbmxpbmUiLCJyZXZpc2lvbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7QUFLQTs7QUFFQSxJQUFLQSxTQUFTQyxHQUFULENBQWFDLEVBQWIsSUFBbUJGLFNBQVNDLEdBQVQsQ0FBYUUsT0FBYixHQUF1QixDQUEvQyxFQUNDSCxTQUFTSSxLQUFULENBQWVDLG1CQUFmLENBQW9DQyxRQUFwQzs7QUFFRDtBQUNBO0FBQ0FOLFNBQVNPLE1BQVQsQ0FBZ0JDLE1BQWhCLEdBQXlCLEdBQXpCO0FBQ0FSLFNBQVNPLE1BQVQsQ0FBZ0JFLEtBQWhCLEdBQXdCLE1BQXhCOztBQUVBLElBQUlDLGFBQWUsWUFBVztBQUM3QixLQUFJQyx1QkFBdUJDLHdCQUEzQjtBQUFBLEtBQ0NDLGtCQUFrQixDQUFDLENBQUNiLFNBQVNjLE9BQVQsQ0FBaUJDLEdBQWpCLENBQXNCLFFBQXRCLENBRHJCOztBQUdBLFFBQU8sWUFBVztBQUNqQixNQUFJQyxnQkFBZ0JoQixTQUFTTSxRQUFULENBQWtCVyxPQUFsQixDQUEyQixRQUEzQixDQUFwQjs7QUFFQTtBQUNBLE1BQUtKLGVBQUwsRUFBdUI7QUFDdEJHLGlCQUFjRSxPQUFkLENBQ0MscUJBQ0EsOERBRkQ7QUFJQTs7QUFFRDtBQUNBLE1BQUtQLG9CQUFMLEVBQTRCO0FBQzNCWCxZQUFTbUIsT0FBVCxDQUFrQixRQUFsQjtBQUNBLEdBRkQsTUFFTztBQUNOSCxpQkFBY0ksWUFBZCxDQUE0QixpQkFBNUIsRUFBK0MsTUFBL0M7QUFDQXBCLFlBQVNxQixNQUFULENBQWlCLFFBQWpCOztBQUVBO0FBQ0E7QUFDQTtBQUNELEVBckJEOztBQXVCQSxVQUFTVCxzQkFBVCxHQUFrQztBQUNqQztBQUNBO0FBQ0EsTUFBS1osU0FBU3NCLFFBQVQsSUFBdUIsUUFBUSxJQUFwQyxFQUE2QztBQUM1QyxVQUFPLElBQVA7QUFDQTs7QUFFRCxTQUFPLENBQUMsQ0FBQ3RCLFNBQVNjLE9BQVQsQ0FBaUJDLEdBQWpCLENBQXNCLGFBQXRCLENBQVQ7QUFDQTtBQUNELENBcENnQixFQUFqQiIsImZpbGUiOiJzYW1wbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDAzLTIwMTcsIENLU291cmNlIC0gRnJlZGVyaWNvIEtuYWJiZW4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIEZvciBsaWNlbnNpbmcsIHNlZSBMSUNFTlNFLm1kIG9yIGh0dHA6Ly9ja2VkaXRvci5jb20vbGljZW5zZVxyXG4gKi9cclxuXHJcbi8qIGV4cG9ydGVkIGluaXRTYW1wbGUgKi9cclxuXHJcbmlmICggQ0tFRElUT1IuZW52LmllICYmIENLRURJVE9SLmVudi52ZXJzaW9uIDwgOSApXHJcblx0Q0tFRElUT1IudG9vbHMuZW5hYmxlSHRtbDVFbGVtZW50cyggZG9jdW1lbnQgKTtcclxuXHJcbi8vIFRoZSB0cmljayB0byBrZWVwIHRoZSBlZGl0b3IgaW4gdGhlIHNhbXBsZSBxdWl0ZSBzbWFsbFxyXG4vLyB1bmxlc3MgdXNlciBzcGVjaWZpZWQgb3duIGhlaWdodC5cclxuQ0tFRElUT1IuY29uZmlnLmhlaWdodCA9IDgwMDtcclxuQ0tFRElUT1IuY29uZmlnLndpZHRoID0gJ2F1dG8nO1xyXG5cclxudmFyIGluaXRTYW1wbGUgPSAoIGZ1bmN0aW9uKCkge1xyXG5cdHZhciB3eXNpd3lnYXJlYUF2YWlsYWJsZSA9IGlzV3lzaXd5Z2FyZWFBdmFpbGFibGUoKSxcclxuXHRcdGlzQkJDb2RlQnVpbHRJbiA9ICEhQ0tFRElUT1IucGx1Z2lucy5nZXQoICdiYmNvZGUnICk7XHJcblxyXG5cdHJldHVybiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBlZGl0b3JFbGVtZW50ID0gQ0tFRElUT1IuZG9jdW1lbnQuZ2V0QnlJZCggJ2VkaXRvcicgKTtcclxuXHJcblx0XHQvLyA6KCgoXHJcblx0XHRpZiAoIGlzQkJDb2RlQnVpbHRJbiApIHtcclxuXHRcdFx0ZWRpdG9yRWxlbWVudC5zZXRIdG1sKFxyXG5cdFx0XHRcdCdIZWxsbyB3b3JsZCFcXG5cXG4nICtcclxuXHRcdFx0XHQnSVxcJ20gYW4gaW5zdGFuY2Ugb2YgW3VybD1odHRwOi8vY2tlZGl0b3IuY29tXUNLRWRpdG9yWy91cmxdLidcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBEZXBlbmRpbmcgb24gdGhlIHd5c2l3eWdhcmUgcGx1Z2luIGF2YWlsYWJpbGl0eSBpbml0aWFsaXplIGNsYXNzaWMgb3IgaW5saW5lIGVkaXRvci5cclxuXHRcdGlmICggd3lzaXd5Z2FyZWFBdmFpbGFibGUgKSB7XHJcblx0XHRcdENLRURJVE9SLnJlcGxhY2UoICdlZGl0b3InICk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRlZGl0b3JFbGVtZW50LnNldEF0dHJpYnV0ZSggJ2NvbnRlbnRlZGl0YWJsZScsICd0cnVlJyApO1xyXG5cdFx0XHRDS0VESVRPUi5pbmxpbmUoICdlZGl0b3InICk7XHJcblxyXG5cdFx0XHQvLyBUT0RPIHdlIGNhbiBjb25zaWRlciBkaXNwbGF5aW5nIHNvbWUgaW5mbyBib3ggdGhhdFxyXG5cdFx0XHQvLyB3aXRob3V0IHd5c2l3eWdhcmVhIHRoZSBjbGFzc2ljIGVkaXRvciBtYXkgbm90IHdvcmsuXHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0ZnVuY3Rpb24gaXNXeXNpd3lnYXJlYUF2YWlsYWJsZSgpIHtcclxuXHRcdC8vIElmIGluIGRldmVsb3BtZW50IG1vZGUsIHRoZW4gdGhlIHd5c2l3eWdhcmVhIG11c3QgYmUgYXZhaWxhYmxlLlxyXG5cdFx0Ly8gU3BsaXQgUkVWIGludG8gdHdvIHN0cmluZ3Mgc28gYnVpbGRlciBkb2VzIG5vdCByZXBsYWNlIGl0IDpELlxyXG5cdFx0aWYgKCBDS0VESVRPUi5yZXZpc2lvbiA9PSAoICclUkUnICsgJ1YlJyApICkge1xyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gISFDS0VESVRPUi5wbHVnaW5zLmdldCggJ3d5c2l3eWdhcmVhJyApO1xyXG5cdH1cclxufSApKCk7XHJcblxyXG4iXX0=
